■■■■　　　　　　　　　　　　　　　　　　　　■　　　　　　　　　　　　　　　　　　　　　■
■　　　■　　　　　　　　　　　　　　　　　　　■　　　　　　　　　　　　　　　　　■　　　■
■　　　■　■　■■　　　■■■　　■■■　　　■　　■　　■■■　　■　　■　　■■■　　■
■■■■　　■■　　■　■　　　■　　　　■　　■　■　　■　　　■　■　　■　　　■　　　■
■　　　■　■　　　　　■■■■■　　■■■　　■■　　　■　　　■　■　　■　　　■　　　■
■　　　■　■　　　　　■　　　　　■　　■　　■　■　　■　　　■　■　　■　　　■　■
■■■■　　■　　　　　　■■■■　　■■　■　■　　■　　■■■　　　■■　■　　　■　　■
※ブロック崩しの英名

Ver. 1.1.2 (2014/8/18)

■■■■■■■
■取扱説明書■
■■■■■■■


　■
■■　　□□□□□□□□□□□□
　■　　□ファイルの構成・説明□
　■　　□□□□□□□□□□□□
■■■

blockフォルダ以下の構成は次のようになっている。

【実行プログラム】
・block
ブロック崩しプログラムの本体。
・dataeditor
ブロック崩しのセーブデータをいじるためのプログラム。(データエディタ)
・datacleaner
ブロック崩しのデータを初期化するプログラム。(データクリーナー)
【ソースファイル】
・block.cpp
メインのソースファイル。
・dataeditor.cpp
データエディタのソースファイル。
・blockranking.cpp
インターネットランキング用CGIのソースファイル。
・datacleaner.cpp
データクリーナーのソースファイル。
【ヘッダファイル】
・ball.hpp
ボールのクラス(Ballクラス)のメンバ関数の実体
・bar.hpp
ラケットのクラス(Barクラス)  〃
・block.hpp
ブロックのクラス(Blockクラス)  〃
・gameker.hpp
ゲームの骨組みのクラス(gamekernelクラス)  〃
・httplib.hpp
URLエンコード/デコードなどの処理関数を持つライブラリ(自作)
・letter_def.hpp
コンストラクタで表示、デストラクタで消去を行う文字のクラス(Letterクラス)の定義
・scoredata.hpp
スコアを管理する構造体(ScoreData構造体)の定義
・solidblock_def.hpp
2回ボールを当てないと消えないブロックのクラス(SolidBlockクラス)の定義
このクラスはBlockクラスの派生クラスである。
・ball_def.hpp
Ballクラスの定義
・bar_def.hpp
Barクラスの定義
・block_def.hpp
Blockクラスの定義
・gameker_def.hpp
gamekernelクラスの定義
・letter.hpp
Letterクラスのメンバ関数の実体
・mt64.h
メルセンヌ・ツイスタによる乱数発生ライブラリ(ダウンロードしてヘッダファイル化を施したもの)
以前の課題で利用していたものより多くの桁数の乱数を発生可能である。
・solidblock.hpp
SolidBlockクラスのメンバ関数の実体
・typedname.hpp
【その他ファイル】
・readme.txt
このファイル
・report.txt
NUCTに提出したレポートファイルの微修正版
・breakout.dat
スコアのデータファイル
【webサーバーに置くもの】
・blockranking.cgi
オンラインランキングのCGI(実行ファイル)
・onlineranking.dat
オンラインランキングのスコアのデータファイル

　■
■　■　□□□□□
　　■　□遊び方□
　■　　□□□□□
■■■

―――標準モード―――
①「block」とコマンドラインで入力して起動する。あまりにも端末画面が小さいとエラーが出る。その場合は再起動が必要である。
②Sキーでゲームを開始できる。L・Rキーでランキングが見れる。終了はQキーで可能である。
③Sキーを押してもすぐにはボールが発射されない。発射するにはスペースキーを押す必要がある。矢印キー・X・C・D・Vキーでラケットを移動できる。C・D・上下キーで上下にも移動できる。Zキーを押すとホールドモードになり、その後カーソルキーを押すとお下方向に移動し続ける。ホールドモードを解除するには、もう一度Zキーを押す。ゲーム中にBキーを押すとタイトルに戻り、Qキーを押すと終了する。
④すべてのブロックにボールを当てて消去すると次のレベルに移る。後半のレベルは通常の紫色のブロックに混じって赤色のブロックが登場する。これは2回当てないと消えないブロックである。1回当てると表示が変わるので、もう1回当てる必要がある。また、レベルが上がると、
・ボールが速くなる
・ラケットが小さくなる
・赤ブロックの数が増える
・得点が増えやすくなる
このような変化が起きる。そのため、難しい後半のミスをなるべく少なくすれば、高得点が望める。
⑤クリアするとスコア登録を求められる場合がある。BackSpaceキーで1文字消すことができる。オンラインランキングにも登録することができる。

―――本ゲームの癖―――
このゲームはいくつかの仕様上の癖があり、慣れないうちは特にその癖によりミスをしやすくなっている。
①ボールが角に当たった時の挙動
	ボールがブロックに斜め横から当たった場合、横方向にも反射する。そのため、ある意味不意打ちになり、以下の要因と合わさって非常にミスをしやすくなっている。
②ラケットの高速移動の遅延
	このゲームではCUIであるため、ある程度方向キーを押し続けないとラケットが高速移動をしない。そのため、ボールの動きにラケットが追いつかず、ミスしやすくなっている。また、高速移動中に他のキーを押すとストップしてしまう。そのため、ミスが起きてしまうこともある。この仕様はホールドモードである程度解消できる。
③ラケットの上下移動
	このゲームではラケットを上下移動できる。そのため、あまりにも調子に乗ってラケットを上に持ってくると①の「不意打ち」に対処できなくなる。

以上の要因が複雑に絡み合ってこのゲームの難易度が高くなっている。そのため、どうしてもクリアできないときはblock.cppのオプションを変更したり、以下のチートモードを利用したりするのも1つの手段である。

―――チートモード―――
このゲームにはチートモードという隠しモードが用意されている。チートモードで起動する場合は「block cheat」とcheatオプションを付ける。すると次のような変化が起きる。
①タイトルロゴなどの色の変化
	通常モードでは赤色であるが、チートモードでは青色になる。
②ラケットの手動伸縮
	通常モードでは、ラケットを手動で伸縮することはできないが、チートモードでは以下のような操作で伸縮が可能である。
		・Aキー: 半角2文字分縮める
		・Gキー:     〃     伸ばす
		・Fキー: 長さをMAXにする
③ボールの手動速度変更
	通常モードではボールの速度は手動で変更することはできないが、チートモードでは速くすることも遅くすることも可能である。Eキーで速く、Wキーで遅くなる。
④上下移動の幅拡大
	チートモードでは通常モードよりも上にラケットを動かせる。
⑤ラケット幅の自動収縮なし
	通常モードではレベルアップ時にラケット幅が自動で小さくなるが、チートモードでは②の関係で自動でサイズを変更しないようになっている。

■■
　　■　□□□□□□□□□□□□□□
■■　　□セーブデータに手を加える□
　　■　□□□□□□□□□□□□□□
■■

―――データエディタ―――
セーブデータを修正するにはデータエディタ(dataeditor)を使う。起動すると現在のデータが表示される。n位のデータ(n∈ℕ)を変更したい場合はnを入力する。そして得点→名前の順に入力する。別のデータも変更したい場合はこれを繰り返し、終了したい場合は他の文字を入力してから、もしくは何も入力せずにEnterキーを押して終了する。

―――データクリーナー―――
セーブデータを初期化したい場合にはデータクリーナー(datacleaner)を使う。起動するとデータを初期化するか聞かれるので、初期化する場合には「y」を入力する。

■　■
■　■　□□□□□□□□□□□□□□
■■■　□インターネットランキング□
　　■　□□□□□□□□□□□□□□
　　■

このゲームはインターネットランキングに対応している。このプログラムでは登録・閲覧が可能である。
(2019年GitHubに公開するため、Dockerを利用して各自ホスティングするよう修正)Docker・Composeをインストールし、docker-compose up -dを実行した後、
ブラウザでは以下のURL、
http://localhost:11111/cgi-bin/blockranking.cgi
でアクセスできる。
10位までのデータを保管している。
ここに登録されているスコアデータを全消去したい場合には、以下のURL、
http://localhost:11111/cgi-bin/blockranking.cgi?dataclean=yes
にアクセスされたし。

■■■
■　　　□□□□□□□□□□□
■■　　□コンパイルについて□
　　■　□□□□□□□□□□□
■■

ブロック崩しプログラムのコンパイルは「make」「make block」で行う。
データエディタのプログラムのコンパイルは「make dedit」である。
インターネットランキングCGIのコンパイルは「make cgi」である。
ブロック崩しのデバッグを行う場合には、「make debug」でコンパイルする。
他のプログラムのデバッグには各プログラムのコンパイルコマンドの後ろに「debug」(スペース無し)をつけてコンパイルする。

　■■
■　　　□□□□□□□□□
■■　　□不具合について□
■　■　□□□□□□□□□
　■

ICEのコンピュータで実行すると時々ラケットの表示が乱れる不具合がある。(リモート環境(Windows Puttyごった煮版)ではならなかった)
また、ごくまれに左の壁の一部が消えることがある。(Levelの左側)
また、リモート環境(Puttyなど)ではF3キーが効かないことがある。
全てncurses・端末側の不具合と思われる。

起動中に端末のサイズを変えると不具合が出ることがある。

■■■
■　■　□□□□□□□□□
　　■　□バージョン履歴□
　■　　□□□□□□□□□
　■

Ver. 1.1.2 (8/18)
メイン関数の細かいミスを修正(コメントなど)
コンパイル最適化を行うようにMakefileを修正
Ver. 1.1.1 (8/7)
Miss!の表示を消すときにラケットが重なっているとラケットの表示が一部欠ける不具合を修正
Ver. 1.1.0 (8/7)
起動中の画面サイズ変更にさらに対応
極端な小画面への対応をさらに進めた
direction型(block.cpp内で定義)のコンパクト化
Ver. 1.0.6 (8/6)
起動中の画面サイズ変更にさらに対応
極端な小画面への対応をさらに進めた
Ver. 1.0.5 (8/5)
ホールドモード追加
それにともなってレベル2以降のボールスピードアップ
Ver. 1.0.4 (8/5)
deleteコマンドはNULLポインタに対して何もしないという仕様に則した修正(delete直前のif文削除)
データクリーナーに関する説明の追加
Ver. 1.0.3 (8/4)
データの初期化アルゴリズムを改良・ライブラリ化(memsetを使ったものに変更)
データクリーナーの追加
Ver. 1.0.2 (8/4)
起動中の画面サイズ変更にある程度対応
Ver. 1.0.1 (8/4) (NUCT提出版)
ラケットの右上にボールがあり、ボールのすぐ右に壁があり、ボールがラケットの角ではね返った時に壁に食い込む不具合を修正
ハイスコアの表示がおかしい不具合を修正
Ver. 1.0  (8/3)
初版

　■
■　■　□□□□□□□
　■　　□著作者情報□
■　■　□□□□□□□
　■

081330324 名古屋大学工学部電気電子・情報工学科情報工学コース2年 内野 達貴

※メルセンヌ・ツイスタライブラリ(mt64.h)の著作権は広島大学の松本眞教授・山形大学の西村拓士准教授に属する。
